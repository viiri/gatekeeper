name: Build & Lint

# Only trigger the event on pull-requests
on: [pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    # Test the latest release of Go
    strategy:
      matrix:
        go: ["1.19"]
    steps:
      # Setup the workflow to use the specific version of Go
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2
      # Verify downloaded dependencies
      - name: Verify dependencies
        run: go mod verify
      - name: "Create k3d Cluster for E2E testing"
        uses: AbsaOSS/k3d-action@v1.5.0
        with:
          cluster-name: "testcluster"
          args: >-
            -p "8081:80@loadbalancer"
      - name: "Run E2E tests"
        run: |
          k3d kubeconfig merge testcluster --kubeconfig-switch-context
          KUBECONFIG=~/.k3d/kubeconfig-testcluster.yaml kubectl apply -f ./e2e/k8s/manifest.yml
          go test -v --tags=e2e ./e2e
      # Run tests and generates a coverage profile
      - name: Test
        run: |
          go test -v -race -coverprofile=profile.cov ./...
      # Run Go benchmarks
      - name: Benchmark
        run: |
          go test -run=^$ -bench=. -benchmem
      # Sends code coverage report to Coveralls
      - name: Coveralls
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=profile.cov -service=github
  # Run the linter as a separate job
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.19"]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49
          args: "--out-${NO_FUTURE}format colored-line-number --timeout=2m"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
